// This file is generated by Ubpa::USRefl::AutoRefl

#pragma once

#include <USRefl/USRefl.h>

template<typename T>
struct Ubpa::USRefl::TypeInfo<Vec<T>>
    : Ubpa::USRefl::TypeInfoBase<Vec<T>>
{
    static constexpr AttrList attrs = {
        Attr{"size", sizeof(T)},
    };

    static constexpr FieldList fields = {
        Field{"__constructor", WrapConstructor<Vec<T>()>()},
        Field{"__constructor", WrapConstructor<Vec<T>(T, T)>(),
            AttrList {
                Attr{"__arg_0",
                    AttrList{
                        Attr{"__name", "x"},
                    }
                },
                Attr{"__arg_1",
                    AttrList{
                        Attr{"__name", "y"},
                    }
                },
            }
        },
        Field{"__destructor", WrapDestructor<Vec<T>>()},
        Field{"Sum", static_cast<float(Vec<T>::*)()const>(&Vec<T>::Sum)},
        Field{"Sum", static_cast<float(Vec<T>::*)(float)const>(&Vec<T>::Sum),
            AttrList {
                Attr{"__arg_0",
                    AttrList{
                        Attr{"__name", "z"},
                        Attr{"__default_value", 1.f},
                    }
                },
            }
        },
        Field{"Dot", &Vec<T>::Dot,
            AttrList {
                Attr{"__arg_0",
                    AttrList{
                        Attr{"__name", "lhs"},
                    }
                },
                Attr{"__arg_1",
                    AttrList{
                        Attr{"__name", "rhs"},
                    }
                },
            }
        },
    };
};

